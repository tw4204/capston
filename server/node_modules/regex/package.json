{
  "name": "regex",
  "description": "Native RegExp compatible regular expressions for JavaScript. Patterns may be composed of subexpressions and multiple expressions may be combined into a single expression.",
  "version": "0.1.1",
  "keywords": [
    "regex",
    "regexp",
    "regular",
    "expression",
    "pattern",
    "definition",
    "composition",
    "subexpression",
    "combination"
  ],
  "author": {
    "name": "Aadit M Shah",
    "email": "aaditmshah@fastmail.fm",
    "url": "http://aaditmshah.github.com/"
  },
  "main": "lib/regex.js",
  "maintainers": [
    {
      "name": "Aadit M Shah",
      "email": "aaditmshah@fastmail.fm",
      "url": "http://aaditmshah.github.com/"
    }
  ],
  "contributors": [
    {
      "name": "Aadit M Shah",
      "email": "aaditmshah@fastmail.fm",
      "url": "http://aaditmshah.github.com/"
    }
  ],
  "bugs": {
    "url": "https://github.com/aaditmshah/regex/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "https://github.com/aaditmshah/regex.git"
    }
  ],
  "dependencies": {
    "lex": "1.7.4",
    "jison": "0.4.4",
    "augment": "3.2.1",
    "statemachines": "0.1.0"
  },
  "homepage": "https://github.com/aaditmshah/regex",
  "readme": "# Regex #\n\nNative RegExp compatible regular expressions for JavaScript. Patterns may be composed of subexpressions and multiple expressions may be combined into a single expression.\n\n## Installation ##\n\nRegex may be installed on [node.js](http://nodejs.org/ \"node.js\") via the [node package manager](https://npmjs.org/ \"npm\") using the command `npm install regex`.\n\nYou may also install it on [RingoJS](http://ringojs.org/ \"Home - RingoJS\") using the command `ringo-admin install aaditmshah/regex`.\n\nYou may install it as a [component](https://github.com/component/component \"component/component\") for web apps using the command `component install aaditmshah/regex`.\n\n## Usage ##\n\nThe `Regex` constructor is compatible with the native `RegExp` constructor. You may pass it a `regexp` object or a source string:\n\n```javascript\nvar Regex = require(\"regex\");\nvar regex = new Regex(/(a|b)*abb/);\n```\n\n## Methods ##\n\nLike the native `RegExp` constructor instances of `Regex` have the following methods:\n\n### test ###\n\nThe `test` method is used to simply test whether a string matches the regex pattern:\n\n```javascript\nregex.test(\"abb\");   // true\nregex.test(\"aabb\");  // true\nregex.test(\"babb\");  // true\nregex.test(\"aaabb\"); // true\nregex.test(\"ababb\"); // true\nregex.test(\"abba\");  // false\nregex.test(\"cabb\");  // false\n```\n\n## Operations ##\n\nThe `Regex` constructor currently supports the following regex operations:\n\n1. Concatenation\n2. Alternation\n3. Grouping\n4. Closure\n\n## Changelog ##\n\nThe following changes were made in this version of Regex:\n\n### v0.1.0 ###\n\n* Supports basic regex operations - concatenation, alternation, grouping and closure. No support for pattern composition or combining subexpressions yet.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/aaditmshah/regex.git"
  },
  "_id": "regex@0.1.1",
  "dist": {
    "shasum": "0580995d1846c5376a762b9d358b83068d207aef"
  },
  "_from": "regex@",
  "_resolved": "https://registry.npmjs.org/regex/-/regex-0.1.1.tgz"
}
